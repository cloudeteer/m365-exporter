name: CI

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-24.04
    name: Build & Test
    environment: build
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true

      - run: go mod tidy -diff

      - run: go build -o m365-exporter ./cmd/m365-exporter

      - name: Fetch OIDC token from GH actions API
        run: |-
          OIDC_TOKEN_JSON="$(curl -sSf -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange")"
          OIDC_TOKEN="$(jq -r '.value' <<< "${OIDC_TOKEN_JSON}")"
          printf '%s' "${OIDC_TOKEN}" >"${AZURE_FEDERATED_TOKEN_FILE}"
        env:
          AZURE_FEDERATED_TOKEN_FILE: "${{ format('{0}/.az-token', runner.temp) }}"

      - run: go test ./... -timeout 20s -race -covermode=atomic -coverprofile=coverage.out -coverpkg=./...
        env:
          AZURE_TENANT_ID: "${{ vars.AZURE_TENANT_ID }}"
          AZURE_CLIENT_ID: "${{ vars.AZURE_CLIENT_ID }}"
          AZURE_FEDERATED_TOKEN_FILE: "${{ format('{0}/.az-token', runner.temp) }}"

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: go build (with goreleaser)
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          # renovate: github=goreleaser/goreleaser
          version: v2.5.1
          args: release --snapshot
        env:
          GITHUB_TOKEN: ''

  lint:
    name: golangci-lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'

      - run: go mod tidy -diff

      - name: golangci-lint
        uses: golangci/golangci-lint-action@9fae48acfc02a90574d7c304a1758ef9895495fa # v7.0.1
        with:
          args: --timeout=600s --tests=false

  super-lint:
    name: super-lint
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter/slim@12150456a73e248bdc94d0794898f94e23127c88 # v7.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MULTI_STATUS: false
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_BASH: true
          VALIDATE_BASH_EXEC: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_ENV: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITLEAKS: true
          #VALIDATE_GO_RELEASER: true
          VALIDATE_JSON: true
          VALIDATE_NATURAL_LANGUAGE: true
          VALIDATE_PYTHON: true
          VALIDATE_RENOVATE: true
          VALIDATE_SHELL_SHFMT: true
          VALIDATE_XML: true
          VALIDATE_YAML: true
